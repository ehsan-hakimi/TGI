<?xml version="1.0" encoding="utf-8"?>
<tn:Workflow xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:msdad="clr-namespace:Microsoft.SharePoint.DesignTime.Activities.Design;assembly=Microsoft.SharePoint.DesignTime.Activities.Design" xmlns:p="http://schemas.microsoft.com/workflow/2012/07/xaml/activities" xmlns:p1="wf://workflow.windows.net/$Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:tn="clr-namespace:TGIIssueListNotification.NotifyAssignedStaffbyEmail;assembly=TGIIssueListNotification" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.Client.ServerRuntime</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>Microsoft.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.DesignTime.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>TGIIssueListNotification</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <tn:Workflow.Implementation>
    <Sequence>
      <Sequence.Variables>
        <Variable x:TypeArguments="p:DynamicValue" Name="dv_0" />
        <Variable x:TypeArguments="x:Int32" Name="AssignedTo" />
        <Variable x:TypeArguments="sco:Collection(x:String)" Name="recipients" />
        <Variable x:TypeArguments="x:String" Name="issueTitle" />
        <Variable x:TypeArguments="x:String" Name="IssueID" />
        <Variable x:TypeArguments="x:String" Name="itemURL" />
        <Variable x:TypeArguments="s:DateTime" Name="DueDate" />
      </Sequence.Variables>
      <p1:WriteToHistory>
        <p1:WriteToHistory.Message>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">String.Format("Notification workflow started.")</mca:CSharpValue>
          </InArgument>
        </p1:WriteToHistory.Message>
      </p1:WriteToHistory>
      <p1:LookupSPListItem ItemGuid="{x:Null}" Properties="{x:Null}">
        <p1:LookupSPListItem.ItemId>
          <InArgument x:TypeArguments="x:Int32">
            <p:ExpressionContainerValue x:TypeArguments="x:Int32">
              <p1:GetCurrentItemId />
            </p:ExpressionContainerValue>
          </InArgument>
        </p1:LookupSPListItem.ItemId>
        <p1:LookupSPListItem.ListId>
          <InArgument x:TypeArguments="s:Guid">
            <p:ExpressionContainerValue x:TypeArguments="s:Guid">
              <p1:GetCurrentListId />
            </p:ExpressionContainerValue>
          </InArgument>
        </p1:LookupSPListItem.ListId>
        <p1:LookupSPListItem.Result>
          <OutArgument x:TypeArguments="p:DynamicValue">
            <mca:CSharpReference x:TypeArguments="p:DynamicValue">dv_0</mca:CSharpReference>
          </OutArgument>
        </p1:LookupSPListItem.Result>
      </p1:LookupSPListItem>
      <p:GetODataProperties DisplayName="GetDynamicValueProperties">
        <p:GetODataProperties.Source>
          <InArgument x:TypeArguments="p:DynamicValue">
            <mca:CSharpValue x:TypeArguments="p:DynamicValue">dv_0</mca:CSharpValue>
          </InArgument>
        </p:GetODataProperties.Source>
        <scg:Dictionary x:TypeArguments="x:String, OutArgument">
          <OutArgument x:TypeArguments="x:String" x:Key="Title">
            <mca:CSharpReference x:TypeArguments="x:String">issueTitle</mca:CSharpReference>
          </OutArgument>
          <OutArgument x:TypeArguments="x:String" x:Key="ID">
            <mca:CSharpReference x:TypeArguments="x:String">IssueID</mca:CSharpReference>
          </OutArgument>
          <OutArgument x:TypeArguments="s:DateTime" x:Key="DueDate">
            <mca:CSharpReference x:TypeArguments="s:DateTime">DueDate</mca:CSharpReference>
          </OutArgument>
          <OutArgument x:TypeArguments="x:Int32" x:Key="AssignedToId">
            <mca:CSharpReference x:TypeArguments="x:Int32">AssignedTo</mca:CSharpReference>
          </OutArgument>
        </scg:Dictionary>
      </p:GetODataProperties>
      <p:BuildCollection x:TypeArguments="x:String">
        <p:BuildCollection.Result>
          <OutArgument x:TypeArguments="sco:Collection(x:String)">
            <mca:CSharpReference x:TypeArguments="sco:Collection(x:String)">recipients</mca:CSharpReference>
          </OutArgument>
        </p:BuildCollection.Result>
        <p:BuildCollection.Values>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">AssignedTo.ToString()</mca:CSharpValue>
          </InArgument>
        </p:BuildCollection.Values>
      </p:BuildCollection>
      <p1:LookupWorkflowContextProperty PropertyName="CurrentItemUrl">
        <p1:LookupWorkflowContextProperty.Result>
          <OutArgument x:TypeArguments="x:String">
            <mca:CSharpReference x:TypeArguments="x:String">itemURL</mca:CSharpReference>
          </OutArgument>
        </p1:LookupWorkflowContextProperty.Result>
      </p1:LookupWorkflowContextProperty>
      <p1:WriteToHistory>
        <p1:WriteToHistory.Message>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">String.Format("Before send email: itemURL = {0} - issue ID= {1}", itemURL, IssueID)</mca:CSharpValue>
          </InArgument>
        </p1:WriteToHistory.Message>
      </p1:WriteToHistory>
      <p1:Email AdditionalHeaders="{x:Null}" BCC="{x:Null}" CC="{x:Null}">
        <p1:Email.Body>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">String.Format("Dear Sir/Madam,&lt;br&gt;&lt;br&gt;This is a system generated email.&lt;BR&gt;For more details, please click on the Issue URL below. &lt;p&gt;Title: {0}&lt;/p&gt;&lt;p&gt;Due Date: {1}&lt;/p&gt;&lt;p&gt;Issue URL: {2}&lt;/p&gt;&lt;br&gt;Best regards,", issueTitle, DueDate.ToString(), itemURL)</mca:CSharpValue>
          </InArgument>
        </p1:Email.Body>
        <p1:Email.Subject>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">String.Format("Issue Number # {0} has been assigned to you", IssueID)</mca:CSharpValue>
          </InArgument>
        </p1:Email.Subject>
        <p1:Email.To>
          <InArgument x:TypeArguments="sco:Collection(x:String)">
            <mca:CSharpValue x:TypeArguments="sco:Collection(x:String)">recipients</mca:CSharpValue>
          </InArgument>
        </p1:Email.To>
      </p1:Email>
      <p1:WriteToHistory>
        <p1:WriteToHistory.Message>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">String.Format("workflow finished for item {0}",IssueID)</mca:CSharpValue>
          </InArgument>
        </p1:WriteToHistory.Message>
      </p1:WriteToHistory>
      <sads:DebugSymbol.Symbol>9xDysEs2/dpWkS1jjE4+PKBymgFDOlxVc2Vyc1xBZG1pbmlzdHJhdG9yXERvY3VtZW50c1xWaXN1YWwgU3R1ZGlvIDIwMTNcUHJvamVjdHNcVEdJIElzc3VlIExpc3QgTm90aWZpY2F0aW9uXFRHSUlzc3VlTGlzdE5vdGlmaWNhdGlvblxOb3RpZnlBc3NpZ25lZFN0YWZmYnlFbWFpbFxXb3JrZmxvdy54YW1sHS0DmwEOAgEBNwU9GQIBfD4FUhsCAXFTBWccAgFIaAVzGQIBN3QFeigCAS17BYEBGQIBJIIBBZIBEAIBC5MBBZkBGQIBAjoLOngCAX1IC0ooAgF7TwtPWwIBc0ELQygCAXJhC2FaAgFpXgteWAIBYWQLZFoCAVlWC1ZTAgFRWwtbWwIBSXALcF4CAUBrC2trAgE4dwt3WAIBL3R2dIYBAgEufgt+nAECASWPAQuPAWMCARyFAQuFAf0CAgEUigELigGOAQIBDJYBC5YBgAECAQNJDUkkAwF7AUINQiQDAXIB</sads:DebugSymbol.Symbol>
    </Sequence>
  </tn:Workflow.Implementation>
</tn:Workflow>